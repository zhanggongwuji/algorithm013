/**
 * 589. N叉树的前序遍历
 *
 *
 */
/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> res = new LinkedList<>();
        if(root == null)    return res;
        Stack<Node>  stack = new Stack<>();
        stack.push(root);
        while(!stack.isEmpty())
        {
            Node cur = stack.pop();
            res.add(cur.val);
            for(int i = cur.children.size()-1; i >= 0; i--)
                stack.push(cur.children.get(i));
        }
        return res;

    }
}

//递归实现
    public List<Integer> preorder(Node root) {
        List<Integer> arr = new ArrayList<Integer>();
        return preorder(root, arr);
    }

    public List<Integer> preorder(Node root,List<Integer> result)
    {
        if(root == null)
            return result;

        result.add(root.val);
        for(Node child:root.children)
            preorder(child,result);

        return result;
    }